{"remainingRequest":"/Users/xuyangbing/Desktop/devopsManage/client/node_modules/babel-loader/lib/index.js!/Users/xuyangbing/Desktop/devopsManage/client/src/store.js","dependencies":[{"path":"/Users/xuyangbing/Desktop/devopsManage/client/src/store.js","mtime":1553677042000},{"path":"/Users/xuyangbing/Desktop/devopsManage/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xuyangbing/Desktop/devopsManage/client/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _defineProperty from \"/Users/xuyangbing/Desktop/devopsManage/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _mutations;\n\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nVue.use(Vuex);\nvar types = {\n  SET_AUTHENTICATED: 'SET_AUTHENTICATED',\n  //判断是否认证通过\n  SET_USER: 'SET_USER' //判断用户\n\n};\nvar state = {\n  isAuthenticated: false,\n  //是否授权\n  user: {} //授权通过后user信息\n\n}; //获取状态信息\n\nvar getters = {\n  isAuthenticated: function isAuthenticated(state) {\n    return state.isAuthenticated;\n  },\n  //获取state对象中字段信息\n  user: function user(state) {\n    return state.user;\n  }\n}; //更改状态信息\n\nvar mutations = (_mutations = {}, _defineProperty(_mutations, types.SET_AUTHENTICATED, function (state, isAuthenticated) {\n  //[types.SET_AUTHENTICATED](state,isAuthenticated)表示类型为SET_AUTHENTICATED,\n  // 参数为state,isAuthenticated这2个的函数\n  if (isAuthenticated) state.isAuthenticated = isAuthenticated; //isAuthenticated为真,就把state.isAuthenticated设置为真\n  else state.isAuthenticated = false; //否则,设置为false\n}), _defineProperty(_mutations, types.SET_USER, function (state, user) {\n  if (user) state.user = user; //user存在,就赋值\n  else state.user = {}; //不存在,赋值成空对象\n}), _mutations); //异步调用\n\nvar actions = {\n  setIsAutnenticated: function setIsAutnenticated(_ref, isAuthenticated) {\n    var commit = _ref.commit;\n    commit(types.SET_AUTHENTICATED, isAuthenticated); //commit通过diaptach提交\n  },\n  setUser: function setUser(_ref2, user) {\n    var commit = _ref2.commit;\n    commit(types.SET_USER, user);\n  },\n  clearCurrentState: function clearCurrentState(_ref3) {\n    var commit = _ref3.commit;\n    commit(types.SET_AUTHENTICATED, false); //设置authenticated为false,非授权\n\n    commit(types.SET_USER, null);\n  }\n};\nexport default new Vuex.Store({\n  state: state,\n  getters: getters,\n  mutations: mutations,\n  actions: actions\n});",{"version":3,"sources":["/Users/xuyangbing/Desktop/devopsManage/client/src/store.js"],"names":["Vue","Vuex","use","types","SET_AUTHENTICATED","SET_USER","state","isAuthenticated","user","getters","mutations","actions","setIsAutnenticated","commit","setUser","clearCurrentState","Store"],"mappings":";;;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEAD,GAAG,CAACE,GAAJ,CAAQD,IAAR;AAGA,IAAME,KAAK,GAAG;AACVC,EAAAA,iBAAiB,EAAC,mBADR;AAC6B;AACvCC,EAAAA,QAAQ,EAAG,UAFD,CAEc;;AAFd,CAAd;AAKA,IAAMC,KAAK,GAAG;AACVC,EAAAA,eAAe,EAAC,KADN;AACe;AACzBC,EAAAA,IAAI,EAAC,EAFK,CAEe;;AAFf,CAAd,C,CAKA;;AACA,IAAOC,OAAO,GAAG;AACbF,EAAAA,eAAe,EAAE,yBAAAD,KAAK;AAAA,WAAIA,KAAK,CAACC,eAAV;AAAA,GADT;AACuC;AACpDC,EAAAA,IAAI,EAAE,cAAAF,KAAK;AAAA,WAAIA,KAAK,CAACE,IAAV;AAAA;AAFE,CAAjB,C,CAKA;;AACA,IAAOE,SAAS,iDACXP,KAAK,CAACC,iBADK,YACcE,KADd,EACoBC,eADpB,EACqC;AAAG;AAChD;AACA,MAAIA,eAAJ,EAAqBD,KAAK,CAACC,eAAN,GAAwBA,eAAxB,CAArB,CAA+D;AAA/D,OACKD,KAAK,CAACC,eAAN,GAAwB,KAAxB,CAHwC,CAGT;AACvC,CALW,+BAMXJ,KAAK,CAACE,QANK,YAMKC,KANL,EAMWE,IANX,EAMiB;AACzB,MAAIA,IAAJ,EAAUF,KAAK,CAACE,IAAN,GAAaA,IAAb,CAAV,CAAgC;AAAhC,OACKF,KAAK,CAACE,IAAN,GAAa,EAAb,CAFoB,CAED;AAC3B,CATW,cAAhB,C,CAYA;;AACA,IAAMG,OAAO,GAAG;AACZC,EAAAA,kBAAkB,EAAE,kCAAUL,eAAV,EAA8B;AAAA,QAA5BM,MAA4B,QAA5BA,MAA4B;AAC9CA,IAAAA,MAAM,CAACV,KAAK,CAACC,iBAAP,EAAyBG,eAAzB,CAAN,CAD8C,CACM;AACvD,GAHW;AAIZO,EAAAA,OAAO,EAAC,wBAAUN,IAAV,EAAmB;AAAA,QAAjBK,MAAiB,SAAjBA,MAAiB;AACvBA,IAAAA,MAAM,CAACV,KAAK,CAACE,QAAP,EAAgBG,IAAhB,CAAN;AACH,GANW;AAOZO,EAAAA,iBAAiB,EAAE,kCAAc;AAAA,QAAZF,MAAY,SAAZA,MAAY;AAC7BA,IAAAA,MAAM,CAACV,KAAK,CAACC,iBAAP,EAAyB,KAAzB,CAAN,CAD6B,CACW;;AACxCS,IAAAA,MAAM,CAACV,KAAK,CAACE,QAAP,EAAgB,IAAhB,CAAN;AACH;AAVW,CAAhB;AAaA,eAAe,IAAIJ,IAAI,CAACe,KAAT,CAAe;AAC1BV,EAAAA,KAAK,EAALA,KAD0B;AAE1BG,EAAAA,OAAO,EAAPA,OAF0B;AAG1BC,EAAAA,SAAS,EAATA,SAH0B;AAI1BC,EAAAA,OAAO,EAAPA;AAJ0B,CAAf,CAAf","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\n\nVue.use(Vuex);\n\n\nconst types = {\n    SET_AUTHENTICATED:'SET_AUTHENTICATED', //判断是否认证通过\n    SET_USER : 'SET_USER',  //判断用户\n};\n\nconst state = {\n    isAuthenticated:false,   //是否授权\n    user:{}                  //授权通过后user信息\n};\n\n//获取状态信息\nconst  getters = {\n    isAuthenticated: state => state.isAuthenticated,    //获取state对象中字段信息\n    user: state => state.user\n};\n\n//更改状态信息\nconst  mutations = {\n    [types.SET_AUTHENTICATED](state,isAuthenticated) {  //[types.SET_AUTHENTICATED](state,isAuthenticated)表示类型为SET_AUTHENTICATED,\n        // 参数为state,isAuthenticated这2个的函数\n        if (isAuthenticated) state.isAuthenticated = isAuthenticated;  //isAuthenticated为真,就把state.isAuthenticated设置为真\n        else state.isAuthenticated = false; //否则,设置为false\n    },\n    [types.SET_USER](state,user) {\n        if (user) state.user = user;    //user存在,就赋值\n        else state.user = {};   //不存在,赋值成空对象\n    }\n};\n\n//异步调用\nconst actions = {\n    setIsAutnenticated: ({commit},isAuthenticated) => {\n        commit(types.SET_AUTHENTICATED,isAuthenticated);    //commit通过diaptach提交\n    },\n    setUser:({commit},user) => {\n        commit(types.SET_USER,user);\n    },\n    clearCurrentState: ({commit}) => {\n        commit(types.SET_AUTHENTICATED,false);  //设置authenticated为false,非授权\n        commit(types.SET_USER,null);\n    },\n};\n\nexport default new Vuex.Store({\n    state,\n    getters,\n    mutations,\n    actions,\n})\n\n"]}]}