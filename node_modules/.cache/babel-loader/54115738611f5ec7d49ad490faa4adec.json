{"remainingRequest":"/Users/xuyangbing/Desktop/devopsManage/client/node_modules/thread-loader/dist/cjs.js!/Users/xuyangbing/Desktop/devopsManage/client/node_modules/babel-loader/lib/index.js!/Users/xuyangbing/Desktop/devopsManage/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/xuyangbing/Desktop/devopsManage/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/xuyangbing/Desktop/devopsManage/client/src/views/WebTerminal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/xuyangbing/Desktop/devopsManage/client/src/views/WebTerminal.vue","mtime":1554104287000},{"path":"/Users/xuyangbing/Desktop/devopsManage/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xuyangbing/Desktop/devopsManage/client/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xuyangbing/Desktop/devopsManage/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/xuyangbing/Desktop/devopsManage/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xuyangbing/Desktop/devopsManage/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\n//\n//\n//\n//\n//\n//\nimport { Terminal } from 'xterm';\nimport 'xterm/dist/xterm.css';\nimport * as fit from 'xterm/lib/addons/fit/fit';\nTerminal.applyAddon(fit);\nexport default {\n  name: 'Terminal',\n  data: function data() {\n    return {\n      term: null,\n      websock: null,\n      timer: null\n    };\n  },\n  computed: {\n    terminalId: function terminalId() {\n      console.log(\"terminal_\".concat(this._uid));\n      return \"terminal_\".concat(this._uid);\n    },\n    cluster: function cluster() {\n      return '';\n    },\n    namespace: function namespace() {\n      return localStorage.getItem('namespace');\n    },\n    pod: function pod() {\n      return localStorage.getItem('name');\n    },\n    container: function container() {\n      return '';\n    },\n    wsUrl: function wsUrl() {\n      //const host = window.location.host\n      //return `${host}`\n      var protocol = window.location.protocol === 'http:' ? 'ws://' : 'wss://';\n      var host = window.location.host; //return `${protocol}${host}`\n\n      return \"\".concat(protocol);\n    }\n  },\n  mounted: function mounted() {\n    window.addEventListener('resize', this.handleResize);\n    this.initWebSocket();\n\n    var _self = this;\n\n    this.term = new Terminal();\n    this.term.on('data', function (input) {\n      var sendData = JSON.stringify({\n        type: \"input\",\n        input: input\n      });\n\n      _self.websocketsend(sendData);\n    });\n    this.term.open(document.getElementById(this.terminalId));\n    this.term.on('resize', function () {\n      //this.term.fit()\n      //const re = this.get_term_size()\n      var sendData = JSON.stringify({\n        type: \"resize\",\n        rows: 400,\n        cols: 400\n      });\n\n      _self.websocketsend(sendData);\n    });\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (this.term) {\n      this.term.destroy();\n    }\n\n    window.removeEventListener('resize', this.handleResize); // 移除获取高度事件\n  },\n  methods: {\n    initWebSocket: function initWebSocket() {\n      // 初始化weosocket\n      //const wsuri = `ws://localhost:8000/ssh?podNs=${this.namespace}&podName=${this.pod}&containerName=${this.container}`\n      //const host = this.wsUrl.split(':')[0]\n      //const wsuri = `ws://${host}:8000/ssh?podNs=${this.namespace}&podName=${this.pod}&containerName=${this.container}`\n      var wsuri = \"\".concat(this.wsUrl, \"127.0.0.1:8000/ssh?podNs=\").concat(this.namespace, \"&podName=\").concat(this.pod, \"&containerName=\").concat(this.container);\n      console.log(wsuri);\n      this.websock = new WebSocket(wsuri);\n      this.websock.onmessage = this.websocketonmessage;\n      this.websock.onopen = this.websocketonopen;\n      this.websock.onerror = this.websocketonerror;\n      this.websock.onclose = this.websocketclose;\n    },\n    websocketonopen: function websocketonopen() {\n      // 连接建立之后执行send方法发送数据\n      console.log('ws connected');\n    },\n    websocketonerror: function websocketonerror() {\n      // 连接建立失败重连\n      console.log('连接出错');\n      this.term.write('连接出错\\r\\n'); // this.initWebSocket()\n    },\n    websocketonmessage: function websocketonmessage(e) {\n      // 数据接收\n      //const redata = JSON.parse(e.data)\n      var redata = e.data;\n      this.term.write(redata);\n    },\n    websocketsend: function websocketsend(Data) {\n      // 数据发送\n      if (this.websock.readyState === 1) {\n        this.websock.send(Data);\n      }\n    },\n    websocketclose: function websocketclose(e) {\n      // 关闭\n      console.log('断开连接', e);\n      this.term.write('连接已断开\\r\\n');\n    },\n    get_term_size: function get_term_size() {\n      var initWidth = 9;\n      var initHeight = 17;\n      var windowsWidth = document.body.clientWidth;\n      var windowsHeight = document.documentElement.clientHeight;\n      return {\n        cols: Math.floor(windowsWidth / initWidth),\n        rows: Math.floor(windowsHeight / initHeight)\n      };\n    },\n    handleResize: function handleResize() {\n      var _this = this;\n\n      if (this.timer) {\n        clearTimeout(this.timer);\n        this.timer = null;\n      }\n\n      this.timer = setTimeout(function () {\n        _this.setTermSize();\n      }, 2000);\n    },\n    setTermSize: function setTermSize() {\n      var _this$get_term_size = this.get_term_size(),\n          cols = _this$get_term_size.cols,\n          rows = _this$get_term_size.rows;\n\n      this.term.resize(cols, rows);\n      this.websock.send(JSON.stringify({\n        type: \"resize\",\n        rows: this.term.rows,\n        cols: this.term.cols\n      }));\n    }\n  }\n};",{"version":3,"sources":["WebTerminal.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <div :id=\"terminalId\"/>\n  </div>\n</template>\n\n<script>\nimport { Terminal } from 'xterm'\nimport 'xterm/dist/xterm.css'\nimport * as fit from 'xterm/lib/addons/fit/fit'\nTerminal.applyAddon(fit)\n\nexport default {\n  name: 'Terminal',\n  data() {\n    return {\n      term: null,\n      websock: null,\n      timer: null\n    }\n  },\n  computed: {\n    terminalId() {\n      console.log(`terminal_${this._uid}`)\n      return `terminal_${this._uid}`\n    },\n    cluster() {\n      return ''\n    },\n    namespace() {\n      return localStorage.getItem('namespace')\n    },\n    pod() {\n      return localStorage.getItem('name')\n    },\n    container() {\n      return ''\n    },\n    wsUrl() {\n      //const host = window.location.host\n      //return `${host}`\n      const protocol = window.location.protocol === 'http:' ? 'ws://' : 'wss://'\n      const host = window.location.host\n\n      //return `${protocol}${host}`\n      return `${protocol}`\n    }\n  },\n  mounted() {\n    window.addEventListener('resize', this.handleResize)\n    this.initWebSocket()\n    const _self = this\n    this.term = new Terminal()\n\n    this.term.on('data', function(input) {\n      const sendData = JSON.stringify({type: \"input\", input: input})\n      _self.websocketsend(sendData)\n    })\n\n    this.term.open(document.getElementById(this.terminalId))\n\n    this.term.on('resize', function() {\n      //this.term.fit()\n      //const re = this.get_term_size()\n      const sendData = JSON.stringify({type: \"resize\", rows: 400, cols: 400})\n      _self.websocketsend(sendData)\n    })\n  },\n  beforeDestroy() {\n    if (this.term) {\n      this.term.destroy()\n    }\n    window.removeEventListener('resize', this.handleResize) // 移除获取高度事件\n  },\n  methods: {\n    initWebSocket() { // 初始化weosocket\n      //const wsuri = `ws://localhost:8000/ssh?podNs=${this.namespace}&podName=${this.pod}&containerName=${this.container}`\n      //const host = this.wsUrl.split(':')[0]\n      //const wsuri = `ws://${host}:8000/ssh?podNs=${this.namespace}&podName=${this.pod}&containerName=${this.container}`\n      const wsuri = `${this.wsUrl}127.0.0.1:8000/ssh?podNs=${this.namespace}&podName=${this.pod}&containerName=${this.container}`\n      console.log(wsuri)\n      this.websock = new WebSocket(wsuri)\n      this.websock.onmessage = this.websocketonmessage\n      this.websock.onopen = this.websocketonopen\n      this.websock.onerror = this.websocketonerror\n      this.websock.onclose = this.websocketclose\n    },\n    websocketonopen() { // 连接建立之后执行send方法发送数据\n      console.log('ws connected')\n    },\n    websocketonerror() { // 连接建立失败重连\n      console.log('连接出错')\n      this.term.write('连接出错\\r\\n')\n      // this.initWebSocket()\n    },\n    websocketonmessage(e) { // 数据接收\n      //const redata = JSON.parse(e.data)\n      const redata = e.data\n      this.term.write(redata)\n    },\n    websocketsend(Data) { // 数据发送\n      if (this.websock.readyState === 1) {\n        this.websock.send(Data)\n      }\n    },\n    websocketclose(e) { // 关闭\n      console.log('断开连接', e)\n      this.term.write('连接已断开\\r\\n')\n    },\n    get_term_size() {\n      var initWidth = 9\n      var initHeight = 17\n\n      var windowsWidth = document.body.clientWidth\n      var windowsHeight = document.documentElement.clientHeight\n      return {\n        cols: Math.floor(windowsWidth / initWidth),\n        rows: Math.floor(windowsHeight / initHeight)\n      }\n    },\n    handleResize() {\n      if (this.timer) {\n        clearTimeout(this.timer)\n        this.timer = null\n      }\n      this.timer = setTimeout(() => {\n        this.setTermSize()\n      }, 2000)\n    },\n    setTermSize() {\n      const { cols, rows } = this.get_term_size()\n      this.term.resize(cols, rows)\n      this.websock.send(JSON.stringify({type: \"resize\", rows: this.term.rows, cols: this.term.cols}))\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>\n"],"sourceRoot":"src/views"}]}