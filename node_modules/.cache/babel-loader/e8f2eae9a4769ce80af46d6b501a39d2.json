{"remainingRequest":"/Users/xuyangbing/Desktop/devopsManage/client/node_modules/thread-loader/dist/cjs.js!/Users/xuyangbing/Desktop/devopsManage/client/node_modules/babel-loader/lib/index.js!/Users/xuyangbing/Desktop/devopsManage/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/xuyangbing/Desktop/devopsManage/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/xuyangbing/Desktop/devopsManage/client/src/views/PodList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/xuyangbing/Desktop/devopsManage/client/src/views/PodList.vue","mtime":1553072057000},{"path":"/Users/xuyangbing/Desktop/devopsManage/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xuyangbing/Desktop/devopsManage/client/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xuyangbing/Desktop/devopsManage/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/xuyangbing/Desktop/devopsManage/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xuyangbing/Desktop/devopsManage/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'podlist',\n  data: function data() {\n    return {\n      search_data: {\n        startTime: '',\n        endTime: ''\n      },\n      input: '',\n      paginations: {\n        page_index: 1,\n        //当前页数\n        total: 0,\n        //总条数\n        page_size: 5,\n        //当前页显示多少条\n        page_sizes: [5, 50, 100, 200],\n        //可选每页显示多少条\n        layout: 'total,sizes,prev,next,pager,jumper'\n      },\n      tableData: [],\n      allTableData: [],\n      filterTableData: [],\n      form: {\n        name: '',\n        namespace: '',\n        status: '',\n        pod_ip: '',\n        host_ip: '',\n        start_time: ''\n      },\n      dialog: {\n        show: false,\n        title: '',\n        option: 'edit'\n      }\n    };\n  },\n  created: function created() {\n    this.getProfile();\n  },\n  methods: {\n    getProfile: function getProfile() {\n      var _this = this;\n\n      //获取后端数据\n      this.$axios.get(\"/api/pod/list\").then(function (res) {\n        _this.allTableData = res.data.data;\n        _this.filterTableData = res.data.data; //设置分页数据\n\n        _this.setPaginations();\n      });\n    },\n    setPaginations: function setPaginations() {\n      var _this2 = this;\n\n      //分页属性设置\n      this.paginations.total = this.allTableData.length;\n      this.paginations.page_index = 1;\n      this.paginations.page_size = 5; //设置默认的分页数据\n\n      this.tableData = this.allTableData.filter(function (item, index) {\n        return index < _this2.paginations.page_size;\n      });\n    },\n    onSearchPod: function onSearchPod() {\n      this.$axios.get(\"/api/pod/search\").then();\n    },\n    handlePodTerminal: function handlePodTerminal(row) {\n      var routeUrl = this.$router.resolve({\n        name: 'pod',\n        params: {\n          namespace: row.namespace,\n          pod: row.name //container: this.ticketDetail.ars.fat.container_name\n\n        }\n      });\n      localStorage.setItem(\"namespace\", row.namespace), localStorage.setItem(\"name\", row.name), window.open(routeUrl.href, '_blank'); //window.location.href = 'http://118.89.54.64:9600/static/terminal.html?namespace='+row.namespace+'&pod='+row.name\n    },\n    handleSizeChange: function handleSizeChange(page_size) {\n      //切换size\n      this.paginations.page_index = 1;\n      this.paginations.page_size = page_size;\n      this.tableData = this.allTableData.filter(function (item, index) {\n        return index < page_size;\n      });\n    },\n    handleCurrentChange: function handleCurrentChange(page) {\n      //获取当前页\n      var index = this.paginations.page_size * (page - 1); //数据总数\n\n      var nums = this.paginations.page_size * page;\n      var tables = [];\n\n      for (var i = index; i < nums; i++) {\n        if (this.allTableData[i]) {\n          tables.push(this.allTableData[i]);\n        }\n\n        this.tableData = tables;\n      }\n    },\n    handleSearch: function handleSearch() {\n      //筛选\n      if (!this.search_data.startTime || !this.search_data.endTime) {\n        this.$message({\n          type: 'warning',\n          message: '请选择时间区间'\n        });\n        this.getProfile();\n        return;\n      }\n\n      var sTime = this.search_data.startTime.getTime();\n      var eTime = this.search_data.endTime.getTime();\n      this.allTableData = this.filterTableData.filter(function (item) {\n        var date = new Date(item.start_time);\n        var time = date.getTime();\n        return time >= sTime && time <= eTime;\n      }); //重新调用分页方法\n\n      this.setPaginations();\n    }\n  }\n};",{"version":3,"sources":["PodList.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"fillcontain\">\n        <div>\n            <el-form :inline=\"true\" ref=\"search_data\" :model=\"search_data\">\n                <!-- 时间筛选 -->\n                <el-form-item label=\"按照时间筛选\">\n                    <el-date-picker\n                            v-model=\"search_data.startTime\"\n                            type=\"datetime\"\n                            placeholder=\"选择pod创建时间\">\n                    </el-date-picker> --\n                    <el-date-picker\n                            v-model=\"search_data.endTime\"\n                            type=\"datetime\"\n                            placeholder=\"选择查询截止时间\">\n                    </el-date-picker>\n                </el-form-item>\n                <el-form-item>\n                    <el-button type=\"primary\" size =\"small\" icon=\"el-icon-search\" @click='handleSearch()'>筛选</el-button>\n                </el-form-item>\n                <el-form-item class=\"btnRight\">\n                    <el-input v-model=\"input\" placeholder=\"请输入要查找的pod名\"></el-input>\n                </el-form-item>\n                <el-form-item class=\"btnRight\">               \n                    <el-button type=\"primary\" size =\"small\" icon=\"el-icon-search\" @click='onSearchPod()'>查找</el-button>\n                </el-form-item>\n            </el-form>\n        </div>\n        <div class=\"table_container\">\n            <el-table\n                    v-if=\"tableData.length > 0\"\n                    :data=\"tableData\"\n                    max-height=\"650\"\n                    border\n                    :default-sort = \"{prop: 'start_time', order: 'descending', prop: 'name', order: 'descending'}\"\n                    style=\"width: 100%\">\n                <el-table-column\n                        prop=\"name\"\n                        label=\"pod名字\"\n                        align='center'\n                        width=\"350\"\n                        sortable>\n                        <template slot-scope=\"scope\">\n                            <el-icon name=\"view\"></el-icon>\n                            <span style=\"margin-left: 10px\">{{ scope.row.name }}</span>\n                        </template>\n                </el-table-column>\n                <el-table-column\n                        prop=\"namespace\"\n                        label=\"命名空间\"\n                        align='center'\n                        width=\"100\">\n                </el-table-column>\n                <el-table-column\n                        prop=\"status\"\n                        label=\"pod状态\"\n                        align='center'\n                        width=\"100\">\n                </el-table-column>\n                <el-table-column\n                        prop=\"pod_ip\"\n                        label=\"pod ip\"\n                        align='center'\n                        width=\"120\">\n                </el-table-column>\n                <el-table-column\n                        prop=\"host_ip\"\n                        label=\"主机ip\"\n                        align='center'\n                        width=\"120\">\n                </el-table-column>\n                <el-table-column\n                        prop=\"start_time\"\n                        label=\"启动时间\"\n                        align='center'\n                        width=\"200\"\n                        sortable>\n                        <template slot-scope=\"scope\">\n                            <el-icon name=\"time\"></el-icon>\n                            <span style=\"margin-left: 10px\">{{ scope.row.start_time }}</span>\n                        </template>\n                </el-table-column>\n                <el-table-column\n                    prop=\"operation\"\n                    align='center'\n                    label=\"操作\"\n                    fixed=\"right\"\n                    width=\"250\">\n                    <template slot-scope='scope'>\n                        <el-button \n                            type=\"warning\" \n                            icon='edit' \n                            size=\"small\"\n                            @click='handlePodTerminal(scope.row)'\n                        >进入容器</el-button>\n                        <el-button \n                            type=\"danger\" \n                            icon='delete' \n                            size=\"small\"\n                            @click='onDeleteMoney(scope.row,scope.$index)'\n                        >查看日志</el-button>\n                    </template>\n                </el-table-column>\n            </el-table>\n            <!-- 分页 -->\n            <el-row>\n                <el-col :span=\"24\">\n                    <div class=\"pagination\">\n                        <el-pagination\n                                @size-change=\"handleSizeChange\"\n                                @current-change=\"handleCurrentChange\"\n                                :current-page.sync=\"paginations.page_index\"\n                                :page-sizes=\"paginations.page_sizes\"\n                                :page-size=\"paginations.page_size\"\n                                :layout=\"paginations.layout\"\n                                :total=\"paginations.total\">\n                        </el-pagination>\n                    </div>\n                </el-col>\n            </el-row>\n        </div>\n        <!-- 使用dialog -->\n        <Dialog :dialog='dialog' :form='form' @update=\"getProfile\"></Dialog>\n    </div>\n</template>\n\n<script>\n    export default {\n        name: 'podlist',\n        data(){\n            return {\n                search_data: {\n                    startTime: '',\n                    endTime: ''\n                },\n                input: '',\n                paginations: {\n                    page_index: 1,   //当前页数\n                    total: 0,    //总条数\n                    page_size: 5,   //当前页显示多少条\n                    page_sizes: [5,50,100,200],   //可选每页显示多少条\n                    layout: 'total,sizes,prev,next,pager,jumper'\n                },\n                tableData: [],\n                allTableData: [],\n                filterTableData: [],\n                form:{\n                    name:'',\n                    namespace:'',\n                    status:'',\n                    pod_ip:'',\n                    host_ip:'',\n                    start_time:''\n                },\n                dialog: {\n                    show: false,\n                    title:'',\n                    option:'edit'\n                }\n            }\n        },\n        created(){\n            this.getProfile();\n        },\n        methods: {\n            getProfile(){\n                //获取后端数据\n                this.$axios.get(\"/api/pod/list\")\n                    .then(res => {\n                        this.allTableData = res.data.data;\n                        this.filterTableData = res.data.data;\n                        //设置分页数据\n                        this.setPaginations();\n                    });\n            },\n            setPaginations(){\n                //分页属性设置\n                this.paginations.total = this.allTableData.length;\n                this.paginations.page_index = 1;\n                this.paginations.page_size = 5;\n                //设置默认的分页数据\n                this.tableData = this.allTableData.filter((item, index) => {\n                    return index < this.paginations.page_size;\n                });\n            },\n            onSearchPod(){\n                this.$axios.get(\"/api/pod/search\").then();\n            },\n            handlePodTerminal(row) {\n            const routeUrl = this.$router.resolve({\n                name: 'pod',\n                params: {\n                namespace: row.namespace,\n                pod: row.name,\n                //container: this.ticketDetail.ars.fat.container_name\n                }\n            })\n            localStorage.setItem(\"namespace\",row.namespace),\n            localStorage.setItem(\"name\",row.name),\n            window.open(routeUrl.href, '_blank')\n            //window.location.href = 'http://118.89.54.64:9600/static/terminal.html?namespace='+row.namespace+'&pod='+row.name\n            },\n            handleSizeChange(page_size){\n                //切换size\n                this.paginations.page_index = 1;\n                this.paginations.page_size = page_size;\n                this.tableData = this.allTableData.filter((item, index) => {\n                    return index < page_size;\n                });\n            },\n            handleCurrentChange(page){\n                //获取当前页\n                let index = this.paginations.page_size * (page -1);\n                //数据总数\n                let nums = this.paginations.page_size * page;\n                let tables = [];\n                for (let i=index;i<nums;i++){\n                    if (this.allTableData[i]) {\n                        tables.push(this.allTableData[i]);\n                    }\n                    this.tableData = tables;\n                }\n            },\n            handleSearch(){\n                //筛选\n                if(!this.search_data.startTime|| !this.search_data.endTime) {\n                    this.$message({\n                        type:'warning',\n                        message:'请选择时间区间'\n\n                    });\n                    this.getProfile();\n                    return;\n                }\n                const sTime = this.search_data.startTime.getTime();\n                const eTime = this.search_data.endTime.getTime();\n                this.allTableData = this.filterTableData.filter(item => {\n                    let date = new Date(item.start_time);\n                    let time = date.getTime();\n                    return time >= sTime && time <= eTime;\n                });\n                //重新调用分页方法\n                this.setPaginations();\n            }\n        },\n    };\n</script>\n<style scoped>\n    .fillcontain {\n        width: 100%;\n        height: 100%;\n        padding: 16px;\n        box-sizing: border-box;\n    }\n    .btnRight {\n        float: right;\n    }\n    .pagination {\n        text-align: right;\n        margin-top: 10px;\n    }\n    @import \"../../public/css/reset.css\";\n</style>\n</style>\n"],"sourceRoot":"src/views"}]}