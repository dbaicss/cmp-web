{"remainingRequest":"/Users/xuyangbing/Desktop/devopsManage/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/xuyangbing/Desktop/devopsManage/client/src/components/Console.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/xuyangbing/Desktop/devopsManage/client/src/components/Console.vue","mtime":1553483711000},{"path":"/Users/xuyangbing/Desktop/devopsManage/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xuyangbing/Desktop/devopsManage/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/xuyangbing/Desktop/devopsManage/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xuyangbing/Desktop/devopsManage/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n\nimport Terminal from './Xterm'\nexport default {\n  name: 'Console',\n  props: {\n    terminal: {\n      type: Object,\n      default: {}\n    }\n  },\n  data () {\n    return {\n      term: null,\n      terminalSocket: null\n    }\n  },\n  computed: {\n    cluster() {\n      return ''\n    },\n    namespace() {\n      return localStorage.getItem('namespace')\n    },\n    pod() {\n      return localStorage.getItem('name')\n    },\n    container() {\n      //return this.$route.params.container\n      return ''\n    },\n    wsUrl() {\n      //const protocol = window.location.protocol === 'http:' ? 'ws://' : 'wss://'\n      const host = window.location.host\n      return `${host}`\n    }\n  },\n  methods: {\n    runRealTerminal () {\n      console.log('webSocket is finished')\n    },\n    errorRealTerminal () {\n      console.log('error')\n    },\n    closeRealTerminal () {\n      console.log('close')\n    }\n  },\n  mounted () {\n    console.log('pid : ' + this.terminal.pid + ' is on ready')\n    let terminalContainer = document.getElementById('terminal')\n    this.term = new Terminal()\n    this.term.open(terminalContainer)\n    // open websocket\n    console.log(`${this.wsUrl}`)\n    this.terminalSocket = new WebSocket(`ws://localhost:8000/ssh?podNs=${this.namespace}&podName=${this.pod}&containerName=${this.container}`)\n    this.terminalSocket.onopen = this.runRealTerminal\n    this.terminalSocket.onclose = this.closeRealTerminal\n    this.terminalSocket.onerror = this.errorRealTerminal\n    this.term.attach(this.terminalSocket)\n    this.term._initialized = true\n    console.log('mounted is going on')\n  },\n  beforeDestroy () {\n    this.terminalSocket.close()\n    this.term.destroy()\n  }\n}\n",{"version":3,"sources":["Console.vue"],"names":[],"mappings":";;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Console.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"console\" id=\"terminal\"></div>\n</template>\n<script>\nimport Terminal from './Xterm'\nexport default {\n  name: 'Console',\n  props: {\n    terminal: {\n      type: Object,\n      default: {}\n    }\n  },\n  data () {\n    return {\n      term: null,\n      terminalSocket: null\n    }\n  },\n  computed: {\n    cluster() {\n      return ''\n    },\n    namespace() {\n      return localStorage.getItem('namespace')\n    },\n    pod() {\n      return localStorage.getItem('name')\n    },\n    container() {\n      //return this.$route.params.container\n      return ''\n    },\n    wsUrl() {\n      //const protocol = window.location.protocol === 'http:' ? 'ws://' : 'wss://'\n      const host = window.location.host\n      return `${host}`\n    }\n  },\n  methods: {\n    runRealTerminal () {\n      console.log('webSocket is finished')\n    },\n    errorRealTerminal () {\n      console.log('error')\n    },\n    closeRealTerminal () {\n      console.log('close')\n    }\n  },\n  mounted () {\n    console.log('pid : ' + this.terminal.pid + ' is on ready')\n    let terminalContainer = document.getElementById('terminal')\n    this.term = new Terminal()\n    this.term.open(terminalContainer)\n    // open websocket\n    console.log(`${this.wsUrl}`)\n    this.terminalSocket = new WebSocket(`ws://localhost:8000/ssh?podNs=${this.namespace}&podName=${this.pod}&containerName=${this.container}`)\n    this.terminalSocket.onopen = this.runRealTerminal\n    this.terminalSocket.onclose = this.closeRealTerminal\n    this.terminalSocket.onerror = this.errorRealTerminal\n    this.term.attach(this.terminalSocket)\n    this.term._initialized = true\n    console.log('mounted is going on')\n  },\n  beforeDestroy () {\n    this.terminalSocket.close()\n    this.term.destroy()\n  }\n}\n</script>"]}]}