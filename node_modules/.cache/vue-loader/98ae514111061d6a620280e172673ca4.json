{"remainingRequest":"/Users/xuyangbing/Desktop/devopsManage/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/xuyangbing/Desktop/devopsManage/client/src/views/Ws.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/xuyangbing/Desktop/devopsManage/client/src/views/Ws.vue","mtime":1553068116000},{"path":"/Users/xuyangbing/Desktop/devopsManage/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xuyangbing/Desktop/devopsManage/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/xuyangbing/Desktop/devopsManage/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xuyangbing/Desktop/devopsManage/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n\nimport { Terminal } from 'xterm'\nimport 'xterm/dist/xterm.css'\nimport * as fit from 'xterm/lib/addons/fit/fit'\nTerminal.applyAddon(fit);\n// 这俩插件不知道干嘛的, 用总比不用好\n//Terminal.applyAddon(winptyCompat)\n//Terminal.applyAddon(webLinks)\n\n\texport default {\n\t\tname: \"pod\",\n\t\tdata() {\n    \treturn {\n      term: null,\n      websock: null,\n      timer: null\n    \t}\n  \t},\n\t\tcomputed: {\n\t\tterminalId() {\n      return `terminal_${this._uid}`\n    \t},\n    namespace() {\n      return localStorage.getItem('namespace')\n    \t},\n    pod() {\n      return localStorage.getItem('pod')\n    \t},\n\t\twsUrl() {\n\t\t\t//const protocol = window.location.protocol === 'http:' ? 'ws://' : 'wss://'\n\t\t\tconst host = window.location.host\n\t\t\treturn `${host}`\n\t\t\t}\n\t\t},\n\t\t  mounted() {\n\t\t\twindow.addEventListener('resize', this.handleResize)\n\t\t\t\tthis.initWebSocket()\n\t\t\t\tconst _self = this\n\t\t\t\tthis.term = new Terminal()\n\n\t\t\t\tthis.term.on('data', function(data) {\n\t\t\t\t\tconst sendData = JSON.stringify({ op: 0, stdin: data })\n\t\t\t\t\t_self.websocketsend(sendData)\n\t\t\t\t})\n\n\t\t\t\tthis.term.open(document.getElementById(this.terminalId))\n\n\t\t\t\tthis.term.on('resize', function(size) {\n\t\t\t\t})\n\t\t\t\tconst { cols, rows } = this.get_term_size()\n\t\t\t\tthis.term.resize(cols, rows)\n\t\t\t},\n\t\t\tbeforeDestroy() {\n\t\t\t\tif (this.term) {\n\t\t\t\t\tthis.term.destroy()\n\t\t\t\t}\n\t\t\t\twindow.removeEventListener('resize', this.handleResize) // 移除获取高度事件\n\t\t\t},\n\t\tmethods: {\n\t\t\tinitsocket(){\n\t\t\t\tconst  wsUri = `ws://${this.wsUrl}/api/ws?\" + \"namespace=\" + ${this.namespace} + \"&pod=\" + ${this.pod}`\n\t\t\t\tthis.websock = new WebSocket(wsUri)\n\t\t\t\tthis.websock.onmessage = this.websocketonmessage\n\t\t\t\tthis.websock.onopen = this.websocketonopen\n\t\t\t\tthis.websock.onerror = this.websocketonerror\n\t\t\t\tthis.websock.onclose = this.websocketclose\n\t\t\t\t},\n\t\t\twebsocketonopen() { // 连接建立之后执行send方法发送数据\n\t\t\t},\n\t\t\twebsocketonmessage(e) { // 数据接收\n\t\t\t\tthis.term.write(e.data)\n\t\t\t},\n\t\t\twebsocketclose(e) { // 关闭\n\t\t\t\tconsole.log('断开连接', e)\n\t\t\t\tthis.socket.close()\n\t\t\t},\n\t\t\twebsocketonerror() { // 连接建立失败重连\n\t\t\t\tthis.term.write('连接出错\\r\\n')\n\t\t\t\t// this.initWebSocket()\n\t\t\t},\n\t\t\tresize() {\n\t\t\t\t\tthis.term.fit()\n\t\t\t\t\tthis.socket.send('{\"cols\":' + term.cols + ',\"rows\":' + term.rows + '}')\n\t\t\t},\n\t\t\t\t\tget_term_size() {\n\t\t\t\tvar initWidth = 9\n\t\t\t\tvar initHeight = 17\n\n\t\t\t\tvar windowsWidth = document.body.clientWidth\n\t\t\t\tvar windowsHeight = document.documentElement.clientHeight\n\t\t\t\treturn {\n\t\t\t\t\tcols: Math.floor(windowsWidth / initWidth),\n\t\t\t\t\trows: Math.floor(windowsHeight / initHeight)\n\t\t\t\t}\n\t\t\t},\n\t\t\thandleResize() {\n\t\t\t\tif (this.timer) {\n\t\t\t\t\tclearTimeout(this.timer)\n\t\t\t\t\tthis.timer = null\n\t\t\t\t}\n\t\t\t\tthis.timer = setTimeout(() => {\n\t\t\t\t\tthis.setTermSize()\n\t\t\t\t}, 2000)\n\t\t\t},\n\t\t\tsetTermSize() {\n\t\t\t\tconst { cols, rows } = this.get_term_size()\n\t\t\t\tthis.term.resize(cols, rows)\n\t\t\t\tthis.websock.send(this.get_term_size())\n\t\t\t}\n\t}\n}\n",{"version":3,"sources":["Ws.vue"],"names":[],"mappings":";;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Ws.vue","sourceRoot":"src/views","sourcesContent":["\n<template>\n  <div>\n    <div :id=\"terminalId\"/>\n  </div>\n</template>\n \n<script>\nimport { Terminal } from 'xterm'\nimport 'xterm/dist/xterm.css'\nimport * as fit from 'xterm/lib/addons/fit/fit'\nTerminal.applyAddon(fit);\n// 这俩插件不知道干嘛的, 用总比不用好\n//Terminal.applyAddon(winptyCompat)\n//Terminal.applyAddon(webLinks)\n\n\texport default {\n\t\tname: \"pod\",\n\t\tdata() {\n    \treturn {\n      term: null,\n      websock: null,\n      timer: null\n    \t}\n  \t},\n\t\tcomputed: {\n\t\tterminalId() {\n      return `terminal_${this._uid}`\n    \t},\n    namespace() {\n      return localStorage.getItem('namespace')\n    \t},\n    pod() {\n      return localStorage.getItem('pod')\n    \t},\n\t\twsUrl() {\n\t\t\t//const protocol = window.location.protocol === 'http:' ? 'ws://' : 'wss://'\n\t\t\tconst host = window.location.host\n\t\t\treturn `${host}`\n\t\t\t}\n\t\t},\n\t\t  mounted() {\n\t\t\twindow.addEventListener('resize', this.handleResize)\n\t\t\t\tthis.initWebSocket()\n\t\t\t\tconst _self = this\n\t\t\t\tthis.term = new Terminal()\n\n\t\t\t\tthis.term.on('data', function(data) {\n\t\t\t\t\tconst sendData = JSON.stringify({ op: 0, stdin: data })\n\t\t\t\t\t_self.websocketsend(sendData)\n\t\t\t\t})\n\n\t\t\t\tthis.term.open(document.getElementById(this.terminalId))\n\n\t\t\t\tthis.term.on('resize', function(size) {\n\t\t\t\t})\n\t\t\t\tconst { cols, rows } = this.get_term_size()\n\t\t\t\tthis.term.resize(cols, rows)\n\t\t\t},\n\t\t\tbeforeDestroy() {\n\t\t\t\tif (this.term) {\n\t\t\t\t\tthis.term.destroy()\n\t\t\t\t}\n\t\t\t\twindow.removeEventListener('resize', this.handleResize) // 移除获取高度事件\n\t\t\t},\n\t\tmethods: {\n\t\t\tinitsocket(){\n\t\t\t\tconst  wsUri = `ws://${this.wsUrl}/api/ws?\" + \"namespace=\" + ${this.namespace} + \"&pod=\" + ${this.pod}`\n\t\t\t\tthis.websock = new WebSocket(wsUri)\n\t\t\t\tthis.websock.onmessage = this.websocketonmessage\n\t\t\t\tthis.websock.onopen = this.websocketonopen\n\t\t\t\tthis.websock.onerror = this.websocketonerror\n\t\t\t\tthis.websock.onclose = this.websocketclose\n\t\t\t\t},\n\t\t\twebsocketonopen() { // 连接建立之后执行send方法发送数据\n\t\t\t},\n\t\t\twebsocketonmessage(e) { // 数据接收\n\t\t\t\tthis.term.write(e.data)\n\t\t\t},\n\t\t\twebsocketclose(e) { // 关闭\n\t\t\t\tconsole.log('断开连接', e)\n\t\t\t\tthis.socket.close()\n\t\t\t},\n\t\t\twebsocketonerror() { // 连接建立失败重连\n\t\t\t\tthis.term.write('连接出错\\r\\n')\n\t\t\t\t// this.initWebSocket()\n\t\t\t},\n\t\t\tresize() {\n\t\t\t\t\tthis.term.fit()\n\t\t\t\t\tthis.socket.send('{\"cols\":' + term.cols + ',\"rows\":' + term.rows + '}')\n\t\t\t},\n\t\t\t\t\tget_term_size() {\n\t\t\t\tvar initWidth = 9\n\t\t\t\tvar initHeight = 17\n\n\t\t\t\tvar windowsWidth = document.body.clientWidth\n\t\t\t\tvar windowsHeight = document.documentElement.clientHeight\n\t\t\t\treturn {\n\t\t\t\t\tcols: Math.floor(windowsWidth / initWidth),\n\t\t\t\t\trows: Math.floor(windowsHeight / initHeight)\n\t\t\t\t}\n\t\t\t},\n\t\t\thandleResize() {\n\t\t\t\tif (this.timer) {\n\t\t\t\t\tclearTimeout(this.timer)\n\t\t\t\t\tthis.timer = null\n\t\t\t\t}\n\t\t\t\tthis.timer = setTimeout(() => {\n\t\t\t\t\tthis.setTermSize()\n\t\t\t\t}, 2000)\n\t\t\t},\n\t\t\tsetTermSize() {\n\t\t\t\tconst { cols, rows } = this.get_term_size()\n\t\t\t\tthis.term.resize(cols, rows)\n\t\t\t\tthis.websock.send(this.get_term_size())\n\t\t\t}\n\t}\n}\n</script>\n\n<style scoped>\n \n \n</style>\n"]}]}